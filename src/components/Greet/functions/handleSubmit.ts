import { FormState } from "../Greeting";

const nameCharts = ["suchka", "pidor", "loshara", "eblan", "shluha"];
const numberCharts = ["228", "666", "777", '1000-7'];

const goodEmails = [
  "konchenui.eblan@gmail.com",
  "ebana.loshara@gmail.com",
  "super.dayn@gmail.com",
  "alpha.pidor@gmail.com",
  "chlen.2cm@gmail.com"
];
const goodGames = ["Roblox", "Genshin Impact", "Hello Kitty Forewer", "My litle Pony Story"];

export function handleSubmit(
  form: FormState,
  onError: (newError: { name: string; message: string }) => void,
  onSucces: (v: boolean) => void,
) {
  console.log("sumbitted");
  // checking empty lines
  for (const key in form) {
    const typedKey = key as keyof FormState;

    if (
      typeof form[typedKey] === "string" &&
      form[typedKey].trim().length === 0
    ) {
      onError({
        name: "–ø—É—Å—Ç–µ –ø–æ–ª–µ",
        message: "–±—É–¥—å –ª–∞—Å–∫–∞ –Ω–µ –±—É–¥—å—Ç–µ –¥–∞–ª–±–∞–π–æ–±–æ–º —ñ –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –ø–æ–ª–µ  " + key,
      });
      return;
    }
  }

  // #region CHECK NAME
  const name = form.name;

  if (!name.includes("_")) {
    onError({
      name: "–ù–µ –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è",
      message: "–≤–∞—à–µ —ñ–º'—è –º–∞—î –±—É—Ç–∏ –ø–æ–¥—ñ–ª–µ–Ω–æ –Ω–∞ => _",
    });
    return;
  } else {
    const splitName = name.split("_");

    if (!splitName.some((el) => nameCharts.includes(el.toLowerCase().trim()))) {
      onError({
        name: "—ñ–º'—è –ø–æ–≤–Ω–∞ —Ö—É–π–Ω—è",
        message:
          "–≤–∞—à–µ —ñ–º'—è –ø–æ–≤–∏–Ω–Ω–æ –≤–∫–ª—é—á–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ –∑ —Ç–∞–∫–∏—Ö —Å–ª—ñ–≤: " +
          [...nameCharts].toString(),
      });
      return;
    } else if (!splitName.some((el) => numberCharts.includes(el))) {
      onError({
        name: "—á–∏—Å–ª–æ –≤ —ñ–º–µ–Ω—ñ- —Ü–µ –∫—Ä—É—Ç–æ",
        message:
          "—É –≤–∞—à–æ–º—É —ñ–º–µ–Ω—ñ –º–∞—é—Ç—å –±—É—Ç–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ –æ–¥–Ω—ñ –∑ —Ü–∏—Ñ—Ä: " + [numberCharts].join(", "),
      });
      return;
    }
  }

  // #endregion CHECK NAME

  //#region CHECK EMAIL

  if (!goodEmails.includes(form.email)) {
    onError({
      name: "–µ–ª–µ–∫—Ç—Ä–æ–Ω–∫–∞ = —Ö—É–π–Ω—è",
      message: "–≤–∞—à–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–∫–∞ –º–∞—î –±—É—Ç–∏ –æ–¥–Ω–æ—é –∑ –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–∏—Ö: " + [...goodEmails].join(", "),
    });
    return;
  }

  //#endregion CHECK EMAIL

  //#region CHECK GAME

  if (form.game === 'Genshin Impact') {
    onError({ name: "–∞–Ω—ñ–º–µ—à–Ω—ñ–∫—ñ —ñ–¥—É—Ç—å –Ω–∞—Ö—É–π", message: "–Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ –¥–ª—è –¥–∞–ª–±–∞–π–æ–±—ñ–≤" });
    return;
  } 

  if (
    !goodGames.some((el) => el.toLowerCase() === form.game.trim().toLowerCase())
  ) {
    onError({
      name: "–≤–∞—à–∞ —ñ–≥—Ä–∞ —Ü–µ –∫—Ä—ñ–Ω–∂",
      message: "–±—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —ñ–≥—Ä—É –¥–ª—è –≥—ñ–≥–∞—á–∞–¥—ñ–≤: " + goodGames.join(", "),
    });
    return;
  }

  //#endregion CHECK GAME

  //#region CHECK NATION

  switch (form.nation) {
    case "–ü–æ–ª—è–∫":
      onError({
        name: "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å",
        message: "–≤–∞—à IP –∞–¥—Ä–µ—Å –º–∞—î –ø—Ä–æ—Ç–æ–∫–æ–ª: /3000.ua. –ë—É–¥—å–ª–∞—Å–∫–∞ –Ω–µ –ø—ñ–∑–¥—ñ—Ç—å",
      });
      return;

    case "–†—É—Å—Å–∫–∏–π":
      onError({
        name: "–ö–∞—Ü–∞–ø–∏",
        message: "–Ω–∞—à —Å–∞–π—Ç –∑–∞–±–∞–Ω–∏–≤ –†–æ—Å–ö–æ–º–ù–∞–¥–∑–æ—Ä –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –ö–∞—Ü–∞–ø—ñ—ó, —Ç–æ–º—É –Ω–∞—à—ñ –ø–æ—Å–ª—É–≥–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ñ",
      });
      return;
  }

  //#endregion CHECK NATION

  //#region CHECK SIZE

  switch (form.size) {
    case "10+cm":
      onError({ name: "–±—Ä–µ—Ö–Ω—è", message: "–±–ª—è—è—è—è—è—Ç—å... –Ω–µ –ø—ñ–∑–¥—ñ—Ç—å!" });
      return;
    case "20+cm":
      onError({ name: "–ø—ñ–∑–¥—å–æ–∂", message: "–Ω–µ –ø—ñ–∑–¥—ñ—Ç—å" });
      return;
  }

  //#endregion CHECK SIZE

  //#region CHECK SEX

  switch (form.sex) {
    case "Baba":
      onError({ name: "—Ç–∏ –Ω–µ —Ç—Ä–∞–Ω—Å üò¢üò≠", message: "—É –≤–∞—à–æ–º—É –æ–±–ª—ñ–∫–æ–≤–æ–º—É –∑–∞–ø–∏—Å—ñ Google —Å–∫–∞–∑–∞–Ω–æ: {userSex: 'male'}" });
      return;
    case "—ñ–Ω—à–µ":
      onError({ name: "–≤–∏—î–±–æ–Ω–∏", message: "–ø—Ä–æ—Å–∏–º–æ –Ω–µ –≤–∏–π–æ–±—É–≤–∞—Ç–∏—Å—å, —Ç–∞ –æ–±—Ä–∞—Ç–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—É —Å—Ç–∞—Ç—å" });
      return;
  }

  //#endregion CHECK SEX

  //#region CHECK DRINK

  switch (form.drink) {
    case "–∫–∞–≤–∞":
      onError({ name: "–ö–æ—Ñ–µ–º–∞–Ω–∏ = –¥—ñ–±—ñ–ª–∏", message: "... –∞ –¥–ª—è –¥–µ–±—ñ–ª—ñ–≤ —Ü–µ–π —Å–∞–π—Ç –Ω–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–∏–π" });
      return;

    case "—ñ–Ω—à–µ":
      onError({ name: "–Ω–µ –≤–∏–π–æ–±—É–π—Ç–µ—Å—å", message: "–±—É–¥—å –ª–∞—Å–∫–∞ –æ–±–µ—Ä—ñ—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π –Ω–∞–ø—ñ–π" });
      return;
  }

  //#endregion CHECK DRINK

  //#region CHECK LANG

  if (form.lang === "C++" || form.lang === "C#") {
    onError({ name: "—ñ–¥—ñ—Ç—å –Ω–∞—Ö—É–π", message: "...–∑–¥–µ—Å—å –≤–ª–∞—Å—Ç–≤—É—é—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏... ‚ù§Ô∏èJavaScript love forewer‚ù§Ô∏è" });
    return;
  }

  //#enfregion CHECK LANG

  onSucces(true); //activate next stage - captcha;
  return;
}
